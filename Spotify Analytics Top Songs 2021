# For this project, I downloaded Spotify data from Kaggle.

# Then I created a table to insert Spotify data into.

# Finally, I performed analytics on the data using SQL. 

#Created the table:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.


#Before querying, I viewed the whole table to gain understanding of the data I was working with.

SELECT * FROM BIT_DB.Spotifydata;


#Afterwards, I explored the data using the following SQL. 

#1. What artist had the highest average song popularity in 2021?
SELECT artist_name, AVG(popularity) AS Average_Popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY Average_Popularity DESC;

#2. What were the top 5 loudest songs (measured in decibels)?
SELECT track_name, artist_name, loudness
FROM BIT_DB.Spotifydata
WHERE loudness > -5
ORDER BY loudness DESC LIMIT 5;

#3. How many Top 50 songs did Olivia Rodrigo have, and what were the song titles?
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Olivia Rodrigo'
GROUP BY track_name;

#4. What song contained the fewest spoken words?
SELECT speechiness, track_name 
FROM BIT_DB.Spotifydata
order BY speechiness LIMIT 1
